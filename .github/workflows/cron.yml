name: Request Page Build
on:
  schedule:
    - cron: '40 * * * *'
    #- cron: '1 */24 * * *'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.ACTIONS }}
          script: |
            // Get day before
            const d = new Date();
            d.setDate(d.getDate()-2);
            console.log(d.toISOString());

            // Commits since day before
            const commits = await github.repos.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              since: d.toISOString()
            });

            // Filter only creation of markdown (no footer)
            const filtered = commits.data.filter(function(c){
              const msg = c.commit.message;
              return (msg.endsWith(".md") && msg.startsWith("Create") && !msg.includes("footer"));
            });

            // Loop filtered
            const added_footer = 0;
            for (const commit of filtered){

              // Get creation commit and take filename
              const single = await github.repos.getCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: commit.sha
              });

              // Get updated file content
              const file = await github.repos.getContent({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: single.data.files[0].filename
              });
              console.log(file.data.path);
              const content = Buffer.from(file.data.content, 'base64').toString('binary');
              if (!content.includes('{% include footer.md %}')) {
                const new_content = content + '\n{% include footer.md %}';
                const encoded_content = Buffer.from(new_content, 'binary').toString('base64');
                const update = await github.repos.createOrUpdateFileContents({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  path: file.data.path,
                  message: 'Append footer',
                  content: encoded_content,
                  sha: file.data.sha,
                  committer: {
                    name: 'trasparente',
                    email: 'stradatrasparente@gmail.com'
                  },
                  author: {
                    name: 'trasparente',
                    email: 'stradatrasparente@gmail.com'
                  }
                });
                added_footer++;
              }
            }

            console.log(added_footer);

            // Trigger Pages rebuild
            const build = await github.repos.requestPagesBuild({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
